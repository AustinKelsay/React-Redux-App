{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\austi\\\\Desktop\\\\Side projects\\\\Redux practice\\\\redux-post\\\\src\\\\components\\\\Posts.js\";\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchPosts } from \"../actions/PostActions\";\n\nclass Posts extends React.Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    console.log(this.props.posts);\n    const postItems = this.props.posts.map(post => React.createElement(\"div\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, post.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, post.body)));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Posts\"), postItems);\n  }\n\n}\n\nPosts.propTypes = {\n  fetchPosts: propTypes.func.isRequired,\n  posts: propTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(Posts);","map":{"version":3,"sources":["C:/Users/austi/Desktop/Side projects/Redux practice/redux-post/src/components/Posts.js"],"names":["React","propTypes","connect","fetchPosts","Posts","Component","componentWillMount","props","componentWillReceiveProps","nextProps","newPost","posts","unshift","render","console","log","postItems","map","post","id","title","body","func","isRequired","array","mapStateToProps","state","items","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAEhCC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,KAAL,CAAWJ,UAAX;AACH;;AAEDK,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAGA,SAAS,CAACC,OAAb,EAAsB;AAClB,WAAKH,KAAL,CAAWI,KAAX,CAAiBC,OAAjB,CAAyBH,SAAS,CAACC,OAAnC;AACH;AAEJ;;AAEDG,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWI,KAAvB;AACA,UAAMK,SAAS,GAAG,KAAKT,KAAL,CAAWI,KAAX,CAAiBM,GAAjB,CAAqBC,IAAI,IACvC;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,KAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,IAAT,CAFJ,CADc,CAAlB;AAMA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEKL,SAFL,CADJ;AAMH;;AA3B+B;;AA8BpCZ,KAAK,CAACH,SAAN,GAAkB;AACdE,EAAAA,UAAU,EAAEF,SAAS,CAACqB,IAAV,CAAeC,UADb;AAEdZ,EAAAA,KAAK,EAAEV,SAAS,CAACuB,KAAV,CAAgBD;AAFT,CAAlB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCf,EAAAA,KAAK,EAAEe,KAAK,CAACf,KAAN,CAAYgB,KADa;AAEhCjB,EAAAA,OAAO,EAAEgB,KAAK,CAACf,KAAN,CAAYiB;AAFW,CAAZ,CAAxB;;AAKA,eAAe1B,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA;AAAD,CAAlB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import React from \"react\";\r\nimport propTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPosts } from \"../actions/PostActions\"\r\n\r\nclass Posts extends React.Component {\r\n\r\n    componentWillMount() {\r\n        this.props.fetchPosts();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.newPost) {\r\n            this.props.posts.unshift(nextProps.newPost)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.posts)\r\n        const postItems = this.props.posts.map(post => (\r\n            <div key={post.id}>\r\n                <h3>{post.title}</h3>\r\n                <p>{post.body}</p>\r\n            </div>\r\n        ))\r\n        return (\r\n            <div>\r\n                <h1>Posts</h1>\r\n                {postItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPosts.propTypes = {\r\n    fetchPosts: propTypes.func.isRequired,\r\n    posts: propTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    posts: state.posts.items,\r\n    newPost: state.posts.item\r\n});\r\n\r\nexport default connect(mapStateToProps, {fetchPosts})(Posts);"]},"metadata":{},"sourceType":"module"}